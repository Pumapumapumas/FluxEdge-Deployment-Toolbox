apiVersion: apps/v1
kind: Deployment
metadata:
  generateName: timpi-synaptron-
  labels:
    app: timpi-synaptron
spec:
  selector:
    matchLabels:
      app: timpi-synaptron
  template:
    metadata:
      labels:
        app: timpi-synaptron
    spec:
      dnsPolicy: None
      dnsConfig:
        nameservers:
          - 8.8.8.8
          - 1.1.1.1
      containers:
        - name: timpi-synaptron
          image: timpiltd/timpi-synaptron:latest
          hostNetwork: true
          env:
            - name: NAME
              value: ""   # Auto-injected by UI
            - name: GUID
              value: ""   # Auto-injected by UI
          ports:
            - containerPort: 80
          resources:
            requests:
              cpu: 4000m
              memory: 12288M
              ephemeral-storage: 180G
            limits:
              cpu: 4000m
              memory: 12288M
              ephemeral-storage: 180G
              nvidia.com/gpu: 1
          volumeMounts:
            - mountPath: /mnt/data

        # ‚úÖ Sidecar for Uptime Kuma Passive Monitoring
        - name: uptime-monitor
          image: python:3.10
          command: [ "/bin/bash", "-c" ]
          args:
            - |
              echo "üöÄ Starting Uptime Kuma Passive Monitor..." | tee -a /tmp/uptime-monitor.log
              while true; do
                  echo "üïí Checking connectivity at $(date)" | tee -a /tmp/uptime-monitor.log
                  RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" "$UPTIME_KUMA_URL")
                  if [[ "$RESPONSE" -eq 200 ]]; then
                      echo "‚úÖ Heartbeat sent at $(date) [Status: $RESPONSE]" | tee -a /tmp/uptime-monitor.log
                  else
                      echo "‚ùå Failed to send heartbeat at $(date) [Status: $RESPONSE]" | tee -a /tmp/uptime-monitor.log
                  fi
                  sleep 60
              done
          env:
            - name: UPTIME_KUMA_URL
              value: ""   # Auto-injected by UI

---
apiVersion: v1
kind: Service
metadata:
  name: timpi-synaptron-service
  labels:
    app: timpi-synaptron
spec:
  selector:
    app: timpi-synaptron
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP