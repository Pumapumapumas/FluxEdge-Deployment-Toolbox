apiVersion: apps/v1
kind: Deployment
metadata:
  generateName: timpi-synaptron-
  labels:
    app: timpi-synaptron
spec:
  selector:
    matchLabels:
      app: timpi-synaptron
  template:
    metadata:
      labels:
        app: timpi-synaptron
    spec:
      dnsPolicy: None
      dnsConfig:
        nameservers:
          - 8.8.8.8
          - 1.1.1.1
      containers:
        - name: timpi-synaptron
          image: timpiltd/timpi-synaptron:latest
          hostNetwork: true
          env:
            - name: NAME
              value: ""  # Auto-injected by UI
            - name: GUID
              value: ""  # Auto-injected by UI
          ports:
            - containerPort: 80
          resources:
            requests:
              cpu: 4000m
              memory: 12288M
              ephemeral-storage: 180G
            limits:
              cpu: 4000m
              memory: 12288M
              ephemeral-storage: 180G
              nvidia.com/gpu: 1
          volumeMounts:
            - mountPath: /mnt/data

        # ‚úÖ Sidecar for Uptime Kuma Passive Monitoring
        - name: uptime-monitor
          image: python:3.10-bullseye
          command: [ "/bin/bash", "-c" ]
          args:
            - |
              apt-get update && apt-get install -y iputils-ping curl;
              echo "üöÄ Starting Uptime Kuma Passive Monitor..." | tee -a /tmp/uptime-monitor.log
              
              # Fail fast if webserver monitoring is enabled but no port is set
              if [ "$UPTIME_KUMA_WEBSERVER" = "true" ] && [ -z "$UPTIME_KUMA_WEBSERVER_PORT" ]; then
                  echo "‚ùå ERROR: Webserver monitoring is enabled but no port is specified. Exiting..." | tee -a /tmp/uptime-monitor.log
                  exit 1
              fi
              
              while true; do
                  echo "üïí Checking connectivity to main container at $(date)" | tee -a /tmp/uptime-monitor.log
                  
                  MAIN_CONTAINER_IP="127.0.0.1"  # This will work inside the Pod
                  MAX_RETRIES=3
                  SUCCESS=false
                  
                  if [ "$UPTIME_KUMA_WEBSERVER" = "true" ]; then
                      for i in $(seq 1 $MAX_RETRIES); do
                          HTTP_RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" http://$MAIN_CONTAINER_IP:$UPTIME_KUMA_WEBSERVER_PORT)
                          if [[ "$HTTP_RESPONSE" -eq 200 ]]; then
                              SUCCESS=true
                              echo "‚úÖ HTTP check successful. Service is responding on port $UPTIME_KUMA_WEBSERVER_PORT." | tee -a /tmp/uptime-monitor.log
                              break
                          else
                              echo "‚ö†Ô∏è HTTP check failed (attempt $i/$MAX_RETRIES) [Status: $HTTP_RESPONSE]" | tee -a /tmp/uptime-monitor.log
                              sleep 5
                          fi
                      done
                  else
                      for i in $(seq 1 $MAX_RETRIES); do
                          if ping -c 1 $MAIN_CONTAINER_IP &> /dev/null; then
                              SUCCESS=true
                              echo "‚úÖ Ping check successful. Main container is reachable." | tee -a /tmp/uptime-monitor.log
                              break
                          else
                              echo "‚ö†Ô∏è Ping check failed (attempt $i/$MAX_RETRIES)" | tee -a /tmp/uptime-monitor.log
                              sleep 5
                          fi
                      done
                  fi
                  
                  if [ "$SUCCESS" = true ] && [ "$UPTIME_KUMA_PING" = "true" ]; then
                      echo "‚úÖ Main container is responsive. Sending Uptime Kuma heartbeat..." | tee -a /tmp/uptime-monitor.log
                      for i in $(seq 1 $MAX_RETRIES); do
                          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" "$UPTIME_KUMA_URL")
                          if [[ "$RESPONSE" -eq 200 ]]; then
                              echo "‚úÖ Heartbeat sent at $(date) [Status: $RESPONSE]" | tee -a /tmp/uptime-monitor.log
                              break
                          else
                              echo "‚ùå Failed to send heartbeat (attempt $i/$MAX_RETRIES) [Status: $RESPONSE]" | tee -a /tmp/uptime-monitor.log
                              sleep 5
                          fi
                      done
                  else
                      echo "‚ùå Main container is unreachable after $MAX_RETRIES attempts. Skipping Uptime Kuma ping." | tee -a /tmp/uptime-monitor.log
                  fi
                  
                  sleep 60
              done
          env:
            - name: UPTIME_KUMA_URL
              value: ""  # Auto-injected by UI
            - name: UPTIME_KUMA_PING
              value: "true"  # Auto-injected by UI
            - name: UPTIME_KUMA_WEBSERVER
              value: "false"  # Auto-injected by UI
            - name: UPTIME_KUMA_WEBSERVER_PORT
              value: ""  # Auto-injected by UI

---
apiVersion: v1
kind: Service
metadata:
  name: timpi-synaptron-service
  labels:
    app: timpi-synaptron
spec:
  selector:
    app: timpi-synaptron
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP
